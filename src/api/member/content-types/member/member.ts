// Interface automatically generated by schemas-to-ts

import { Media } from '../../../../common/schemas-to-ts/Media';
import { Media_Plain } from '../../../../common/schemas-to-ts/Media';
import { AdminPanelRelationPropertyModification } from '../../../../common/schemas-to-ts/AdminPanelRelationPropertyModification';

export enum MemberSpeciality {
  Ciberseguridad = 'Ciberseguridad',
  DesarrolloWeb = 'Desarrollo Web',
  DesarrolloMoVil = 'Desarrollo Móvil',
  Redes = 'Redes',
  SoporteAcadeMico = 'Soporte Académico',}

export interface Member {
  id: number;
  attributes: {
    createdAt: Date;    updatedAt: Date;    publishedAt?: Date;    member_name: string;
    memberGitHubLink: string;
    memberLinkedInLink: string;
    memberDescription: string;
    memberDni: number;
    memberCicle: number;
    memberImage: { data: Media };
    memberSpeciality: MemberSpeciality;
    locale: string;
    localizations?: { data: Member[] };
  };
}
export interface Member_Plain {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  member_name: string;
  memberGitHubLink: string;
  memberLinkedInLink: string;
  memberDescription: string;
  memberDni: number;
  memberCicle: number;
  memberImage: Media_Plain;
  memberSpeciality: MemberSpeciality;
  locale: string;
  localizations?: Member_Plain[];
}

export interface Member_NoRelations {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  member_name: string;
  memberGitHubLink: string;
  memberLinkedInLink: string;
  memberDescription: string;
  memberDni: number;
  memberCicle: number;
  memberImage: number;
  memberSpeciality: MemberSpeciality;
  locale: string;
  localizations?: Member[];
}

export interface Member_AdminPanelLifeCycle {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  member_name: string;
  memberGitHubLink: string;
  memberLinkedInLink: string;
  memberDescription: string;
  memberDni: number;
  memberCicle: number;
  memberImage: AdminPanelRelationPropertyModification<Media_Plain>;
  memberSpeciality: MemberSpeciality;
  locale: string;
  localizations?: Member[];
}
